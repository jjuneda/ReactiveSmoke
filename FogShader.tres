[gd_resource type="ShaderMaterial" load_steps=3 format=3 uid="uid://buy0qtgttsseq"]

[ext_resource type="CompressedTexture3D" uid="uid://cacusinlmd0gr" path="res://3D_noise.png" id="1_mshci"]

[sub_resource type="Shader" id="Shader_3xr61"]
code = "shader_type fog;

// FogMaterial parameters
uniform float density : hint_range(0, 2, 0.0001) = 1.0;
uniform float pressure_wave_size : hint_range(0, 10, 0.01) = 1.0;
uniform vec4 albedo : source_color = vec4(1.0);
uniform vec4 emission : source_color = vec4(0, 0, 0, 1);
uniform float height_falloff = 0.0;
uniform sampler3D density_texture: hint_default_white;

// Smoke tuning
uniform float smoke_fade_in : hint_range(0, 10, 0.001) = 0.8;
uniform float smoke_fade_out : hint_range(0, 10, 0.001) = 6.0;
uniform float smoke_fade_out_duration : hint_range(0, 10, 0.001) = 2.0;
// Shockwaves tuning
uniform float frags_fade_in : hint_range(0, 10, 0.001) = 0.2;
uniform float frags_fade_in_offset : hint_range(0, 10, 0.001) = 0.3;

// Smoke grenade data
uniform vec4 pos_size;
uniform vec3 cam_pos;

// Negative volumes
uniform vec3 negative_p;
uniform vec3 negative_b;

// Frag grenades
// TODO: Use uniform arrays instead
uniform vec4 F0;
uniform float F0_t;
uniform vec4 F1;
uniform float F1_t;
uniform vec4 F2;
uniform float F2_t;
uniform vec4 F3;
uniform float F3_t;
uniform vec4 F4;
uniform float F4_t;
uniform vec4 F5;
uniform float F5_t;
uniform vec4 F6;
uniform float F6_t;
uniform vec4 F7;
uniform float F7_t;
uniform vec4 F8;
uniform float F8_t;
uniform vec4 F9;
uniform float F9_t;
uniform vec4 F10;
uniform float F10_t;
uniform vec4 F11;
uniform float F11_t;
uniform vec4 F12;
uniform float F12_t;
uniform vec4 F13;
uniform float F13_t;
uniform vec4 F14;
uniform float F14_t;
uniform vec4 F15;
uniform float F15_t;
// Bullet trails
uniform vec4 B0;
uniform float B0_t;
uniform vec4 B1;
uniform float B1_t;
uniform vec4 B2;
uniform float B2_t;
uniform vec4 B3;
uniform float B3_t;
uniform vec4 B4;
uniform float B4_t;
uniform vec4 B5;
uniform float B5_t;
uniform vec4 B6;
uniform float B6_t;
uniform vec4 B7;
uniform float B7_t;
uniform vec4 B8;
uniform float B8_t;
uniform vec4 B9;
uniform float B9_t;
uniform vec4 B10;
uniform float B10_t;
uniform vec4 B11;
uniform float B11_t;
uniform vec4 B12;
uniform float B12_t;
uniform vec4 B13;
uniform float B13_t;
uniform vec4 B14;
uniform float B14_t;
uniform vec4 B15;
uniform float B15_t;

// Local time
uniform float time : hint_range(0, 200, 0.016) = 0.0;

// Box SDF from Inigo Quilez
float sd_box(vec3 p, vec3 b) {
	vec3 q = abs(p) - b;
	return length(max(q, 0.0)) + min(max(q.x, max(q.y, q.z)), 0.0);
}
// Capsule SDF from Inigo Quilez
float sd_capsule(vec3 p, vec3 a, vec3 b, float r)
{
  vec3 pa = p - a, ba = b - a;
  float h = clamp(dot(pa, ba) / dot(ba, ba), 0.0, 1.0);
  return length(pa - ba * h) - r;
}

// Fog shader
void fog() {
	// Height falloff
	DENSITY = density * clamp(exp2(-height_falloff * (WORLD_POSITION.y - OBJECT_POSITION.y)), 0.0, 1.0);
	// 3D noise
	float noise_coarse = texture(density_texture, UVW / 0.8 * (time / 2.0)).r;
	float noise_fine = texture(density_texture, UVW / 2.0 * (time / 6.0)).r;
	float noise = (noise_coarse + noise_fine) / 2.0;
	// Overall shape (sphere)
	DENSITY *= step(0.5 + distance(pos_size.xyz, WORLD_POSITION), pos_size.w / 2.0 * smoothstep(0.0, smoke_fade_in, time + 0.3));
	// Smoke noise
	DENSITY *= max(step(0.55, noise), step(0.5 + distance(pos_size.xyz, WORLD_POSITION), pos_size.w / 2.2));
	// Pressure waves from frag grenades
	// TODO: Use a for loop with uniform arrays instead
	DENSITY *= step(mix(0.0, F0.w, smoothstep(0.0, frags_fade_in, TIME - F0_t + frags_fade_in_offset)), distance(F0.xyz, WORLD_POSITION));
	DENSITY *= step(mix(0.0, F1.w, smoothstep(0.0, frags_fade_in, TIME - F1_t + frags_fade_in_offset)), distance(F1.xyz, WORLD_POSITION));
	DENSITY *= step(mix(0.0, F2.w, smoothstep(0.0, frags_fade_in, TIME - F2_t + frags_fade_in_offset)), distance(F2.xyz, WORLD_POSITION));
	DENSITY *= step(mix(0.0, F3.w, smoothstep(0.0, frags_fade_in, TIME - F3_t + frags_fade_in_offset)), distance(F3.xyz, WORLD_POSITION));
	DENSITY *= step(mix(0.0, F4.w, smoothstep(0.0, frags_fade_in, TIME - F4_t + frags_fade_in_offset)), distance(F4.xyz, WORLD_POSITION));
	DENSITY *= step(mix(0.0, F5.w, smoothstep(0.0, frags_fade_in, TIME - F5_t + frags_fade_in_offset)), distance(F5.xyz, WORLD_POSITION));
	DENSITY *= step(mix(0.0, F6.w, smoothstep(0.0, frags_fade_in, TIME - F6_t + frags_fade_in_offset)), distance(F6.xyz, WORLD_POSITION));
	DENSITY *= step(mix(0.0, F7.w, smoothstep(0.0, frags_fade_in, TIME - F7_t + frags_fade_in_offset)), distance(F7.xyz, WORLD_POSITION));
	DENSITY *= step(mix(0.0, F8.w, smoothstep(0.0, frags_fade_in, TIME - F8_t + frags_fade_in_offset)), distance(F8.xyz, WORLD_POSITION));
	DENSITY *= step(mix(0.0, F9.w, smoothstep(0.0, frags_fade_in, TIME - F9_t + frags_fade_in_offset)), distance(F9.xyz, WORLD_POSITION));
	DENSITY *= step(mix(0.0, F10.w, smoothstep(0.0, frags_fade_in, TIME - F10_t + frags_fade_in_offset)), distance(F10.xyz, WORLD_POSITION));
	DENSITY *= step(mix(0.0, F11.w, smoothstep(0.0, frags_fade_in, TIME - F11_t + frags_fade_in_offset)), distance(F11.xyz, WORLD_POSITION));
	DENSITY *= step(mix(0.0, F12.w, smoothstep(0.0, frags_fade_in, TIME - F12_t + frags_fade_in_offset)), distance(F12.xyz, WORLD_POSITION));
	DENSITY *= step(mix(0.0, F13.w, smoothstep(0.0, frags_fade_in, TIME - F13_t + frags_fade_in_offset)), distance(F13.xyz, WORLD_POSITION));
	DENSITY *= step(mix(0.0, F14.w, smoothstep(0.0, frags_fade_in, TIME - F14_t + frags_fade_in_offset)), distance(F14.xyz, WORLD_POSITION));
	DENSITY *= step(mix(0.0, F15.w, smoothstep(0.0, frags_fade_in, TIME - F15_t + frags_fade_in_offset)), distance(F15.xyz, WORLD_POSITION));
	// Pressure waves from bullet trails
	// TODO: Use a for loop with uniform arrays instead
	DENSITY *= step(0.0, sd_capsule(WORLD_POSITION.xyz, B0.xyz, cam_pos, mix(0.0, B0.w, smoothstep(0.0, frags_fade_in, TIME - B0_t + frags_fade_in_offset))));
	DENSITY *= step(0.0, sd_capsule(WORLD_POSITION.xyz, B1.xyz, cam_pos, mix(0.0, B1.w, smoothstep(0.0, frags_fade_in, TIME - B1_t + frags_fade_in_offset))));
	DENSITY *= step(0.0, sd_capsule(WORLD_POSITION.xyz, B2.xyz, cam_pos, mix(0.0, B2.w, smoothstep(0.0, frags_fade_in, TIME - B2_t + frags_fade_in_offset))));
	DENSITY *= step(0.0, sd_capsule(WORLD_POSITION.xyz, B3.xyz, cam_pos, mix(0.0, B3.w, smoothstep(0.0, frags_fade_in, TIME - B3_t + frags_fade_in_offset))));
	DENSITY *= step(0.0, sd_capsule(WORLD_POSITION.xyz, B4.xyz, cam_pos, mix(0.0, B4.w, smoothstep(0.0, frags_fade_in, TIME - B4_t + frags_fade_in_offset))));
	DENSITY *= step(0.0, sd_capsule(WORLD_POSITION.xyz, B5.xyz, cam_pos, mix(0.0, B5.w, smoothstep(0.0, frags_fade_in, TIME - B5_t + frags_fade_in_offset))));
	DENSITY *= step(0.0, sd_capsule(WORLD_POSITION.xyz, B6.xyz, cam_pos, mix(0.0, B6.w, smoothstep(0.0, frags_fade_in, TIME - B6_t + frags_fade_in_offset))));
	DENSITY *= step(0.0, sd_capsule(WORLD_POSITION.xyz, B7.xyz, cam_pos, mix(0.0, B7.w, smoothstep(0.0, frags_fade_in, TIME - B7_t + frags_fade_in_offset))));
	DENSITY *= step(0.0, sd_capsule(WORLD_POSITION.xyz, B8.xyz, cam_pos, mix(0.0, B8.w, smoothstep(0.0, frags_fade_in, TIME - B8_t + frags_fade_in_offset))));
	DENSITY *= step(0.0, sd_capsule(WORLD_POSITION.xyz, B9.xyz, cam_pos, mix(0.0, B9.w, smoothstep(0.0, frags_fade_in, TIME - B9_t + frags_fade_in_offset))));
	DENSITY *= step(0.0, sd_capsule(WORLD_POSITION.xyz, B10.xyz, cam_pos, mix(0.0, B10.w, smoothstep(0.0, frags_fade_in, TIME - B10_t + frags_fade_in_offset))));
	DENSITY *= step(0.0, sd_capsule(WORLD_POSITION.xyz, B11.xyz, cam_pos, mix(0.0, B11.w, smoothstep(0.0, frags_fade_in, TIME - B11_t + frags_fade_in_offset))));
	DENSITY *= step(0.0, sd_capsule(WORLD_POSITION.xyz, B12.xyz, cam_pos, mix(0.0, B12.w, smoothstep(0.0, frags_fade_in, TIME - B12_t + frags_fade_in_offset))));
	DENSITY *= step(0.0, sd_capsule(WORLD_POSITION.xyz, B13.xyz, cam_pos, mix(0.0, B13.w, smoothstep(0.0, frags_fade_in, TIME - B13_t + frags_fade_in_offset))));
	DENSITY *= step(0.0, sd_capsule(WORLD_POSITION.xyz, B14.xyz, cam_pos, mix(0.0, B14.w, smoothstep(0.0, frags_fade_in, TIME - B14_t + frags_fade_in_offset))));
	DENSITY *= step(0.0, sd_capsule(WORLD_POSITION.xyz, B15.xyz, cam_pos, mix(0.0, B15.w, smoothstep(0.0, frags_fade_in, TIME - B15_t + frags_fade_in_offset))));
	// Negative volume
	float negative_volume = sd_box((WORLD_POSITION - negative_p) * 1.8, negative_b);
	DENSITY *= step(0.0, negative_volume);
	
	// Output
	DENSITY = mix(DENSITY, 0.0, smoothstep(smoke_fade_out, smoke_fade_out + smoke_fade_out_duration, time)); // Fade out smoke
	ALBEDO = albedo.rgb;
	EMISSION = emission.rgb;
}
"

[resource]
shader = SubResource("Shader_3xr61")
shader_parameter/density = 2.0
shader_parameter/pressure_wave_size = 1.0
shader_parameter/albedo = Color(1, 1, 1, 1)
shader_parameter/emission = Color(0.376471, 0.376471, 0.376471, 1)
shader_parameter/height_falloff = 0.1
shader_parameter/smoke_fade_in = 0.8
shader_parameter/smoke_fade_out = 6.0
shader_parameter/smoke_fade_out_duration = 2.0
shader_parameter/frags_fade_in = 0.2
shader_parameter/frags_fade_in_offset = 0.3
shader_parameter/pos_size = null
shader_parameter/cam_pos = null
shader_parameter/negative_p = null
shader_parameter/negative_b = null
shader_parameter/F0 = null
shader_parameter/F0_t = null
shader_parameter/F1 = null
shader_parameter/F1_t = null
shader_parameter/F2 = null
shader_parameter/F2_t = null
shader_parameter/F3 = null
shader_parameter/F3_t = null
shader_parameter/F4 = null
shader_parameter/F4_t = null
shader_parameter/F5 = null
shader_parameter/F5_t = null
shader_parameter/F6 = null
shader_parameter/F6_t = null
shader_parameter/F7 = null
shader_parameter/F7_t = null
shader_parameter/F8 = null
shader_parameter/F8_t = null
shader_parameter/F9 = null
shader_parameter/F9_t = null
shader_parameter/F10 = null
shader_parameter/F10_t = null
shader_parameter/F11 = null
shader_parameter/F11_t = null
shader_parameter/F12 = null
shader_parameter/F12_t = null
shader_parameter/F13 = null
shader_parameter/F13_t = null
shader_parameter/F14 = null
shader_parameter/F14_t = null
shader_parameter/F15 = null
shader_parameter/F15_t = null
shader_parameter/B0 = null
shader_parameter/B0_t = null
shader_parameter/B1 = null
shader_parameter/B1_t = null
shader_parameter/B2 = null
shader_parameter/B2_t = null
shader_parameter/B3 = null
shader_parameter/B3_t = null
shader_parameter/B4 = null
shader_parameter/B4_t = null
shader_parameter/B5 = null
shader_parameter/B5_t = null
shader_parameter/B6 = null
shader_parameter/B6_t = null
shader_parameter/B7 = null
shader_parameter/B7_t = null
shader_parameter/B8 = null
shader_parameter/B8_t = null
shader_parameter/B9 = null
shader_parameter/B9_t = null
shader_parameter/B10 = null
shader_parameter/B10_t = null
shader_parameter/B11 = null
shader_parameter/B11_t = null
shader_parameter/B12 = null
shader_parameter/B12_t = null
shader_parameter/B13 = null
shader_parameter/B13_t = null
shader_parameter/B14 = null
shader_parameter/B14_t = null
shader_parameter/B15 = null
shader_parameter/B15_t = null
shader_parameter/time = 0.0
shader_parameter/density_texture = ExtResource("1_mshci")
